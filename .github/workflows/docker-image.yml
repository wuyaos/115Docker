name: build

on:
  schedule:
    - cron: '0 10 * * 0'
  workflow_dispatch:
jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      packages: write
      contents: write
      attestations: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Fetch value from URL
        id: fetch-url
        run: |
          VERSION=$(curl -s https://appversion.115.com/1/web/1.0/api/getMultiVer | jq '.data["Linux-115chrome"].version_code'  | tr -d '"')
          echo "Fetched value: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Read last value from file
        id: read-file
        run: |
          if [ -f .github/version ]; then
            LAST_VERSION=$(cat .github/version)
          else
            LAST_VERSION=""
          fi
          echo "Last version: $LAST_VERSION"
          echo "last_version=$LAST_VERSION" >> $GITHUB_OUTPUT
      - name: Check if values match
        id: check-match
        run: |
          if [ "${{ steps.fetch-url.outputs.version }}" = "${{ steps.read-file.outputs.last_version }}" ]; then
            echo "Values match, cancelling workflow"
            echo "should_cancel=true" >> $GITHUB_OUTPUT
          else
            echo "Values differ, proceeding with workflow"
            echo "should_cancel=false" >> $GITHUB_OUTPUT
            echo "${{ steps.fetch-url.outputs.version }}" > .github/version
          fi
      - name: Cancel workflow if matched
        if: steps.check-match.outputs.should_cancel == 'true'
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "This workflow was manually triggered."
          elif [[ "${{ github.event_name }}" == "schedule" ]]; then
            exit 1
          else
            echo "Unknown trigger: ${{ github.event_name }}"
          fi
      - name: Save version
        if: steps.check-match.outputs.should_cancel == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add .github/version
          git commit -m "Update version via GitHub Actions"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          git push origin master
          git push
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Release and push (master branch)
        # if: ${{ github.event_name == 'workflow_dispatch' && github.ref_name == 'master' }}
        if: ${{ github.ref_name == 'master' }}
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ghcr.io/dream10201/115docker:latest
            docker.io/xiuxiu10201/115:latest

      - name: Release and push (non-master branch)
        # if: ${{ github.event_name == 'workflow_dispatch' && github.ref_name != 'master' }}
        if: ${{ github.ref_name == 'dev' }}
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ghcr.io/dream10201/115docker:dev
            docker.io/xiuxiu10201/115:dev
